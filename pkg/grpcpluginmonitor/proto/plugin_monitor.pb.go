//
//Copyright 2024 The Kubernetes Authors All rights reserved.
//
//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: proto/plugin_monitor.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ProblemType represents the type of problem detected
type ProblemType int32

const (
	ProblemType_PERMANENT ProblemType = 0 // Changes node condition
	ProblemType_TEMPORARY ProblemType = 1 // Generates event only
)

// Enum value maps for ProblemType.
var (
	ProblemType_name = map[int32]string{
		0: "PERMANENT",
		1: "TEMPORARY",
	}
	ProblemType_value = map[string]int32{
		"PERMANENT": 0,
		"TEMPORARY": 1,
	}
)

func (x ProblemType) Enum() *ProblemType {
	p := new(ProblemType)
	*p = x
	return p
}

func (x ProblemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProblemType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_plugin_monitor_proto_enumTypes[0].Descriptor()
}

func (ProblemType) Type() protoreflect.EnumType {
	return &file_proto_plugin_monitor_proto_enumTypes[0]
}

func (x ProblemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProblemType.Descriptor instead.
func (ProblemType) EnumDescriptor() ([]byte, []int) {
	return file_proto_plugin_monitor_proto_rawDescGZIP(), []int{0}
}

// ProblemStatus represents the status of the problem
type ProblemStatus int32

const (
	ProblemStatus_OK      ProblemStatus = 0 // No problem detected
	ProblemStatus_WARNING ProblemStatus = 1 // Problem detected
	ProblemStatus_UNKNOWN ProblemStatus = 2 // Unable to determine status
)

// Enum value maps for ProblemStatus.
var (
	ProblemStatus_name = map[int32]string{
		0: "OK",
		1: "WARNING",
		2: "UNKNOWN",
	}
	ProblemStatus_value = map[string]int32{
		"OK":      0,
		"WARNING": 1,
		"UNKNOWN": 2,
	}
)

func (x ProblemStatus) Enum() *ProblemStatus {
	p := new(ProblemStatus)
	*p = x
	return p
}

func (x ProblemStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProblemStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_plugin_monitor_proto_enumTypes[1].Descriptor()
}

func (ProblemStatus) Type() protoreflect.EnumType {
	return &file_proto_plugin_monitor_proto_enumTypes[1]
}

func (x ProblemStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProblemStatus.Descriptor instead.
func (ProblemStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_plugin_monitor_proto_rawDescGZIP(), []int{1}
}

// ProblemSeverity represents the severity level
type ProblemSeverity int32

const (
	ProblemSeverity_INFO  ProblemSeverity = 0
	ProblemSeverity_WARN  ProblemSeverity = 1
	ProblemSeverity_ERROR ProblemSeverity = 2
)

// Enum value maps for ProblemSeverity.
var (
	ProblemSeverity_name = map[int32]string{
		0: "INFO",
		1: "WARN",
		2: "ERROR",
	}
	ProblemSeverity_value = map[string]int32{
		"INFO":  0,
		"WARN":  1,
		"ERROR": 2,
	}
)

func (x ProblemSeverity) Enum() *ProblemSeverity {
	p := new(ProblemSeverity)
	*p = x
	return p
}

func (x ProblemSeverity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProblemSeverity) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_plugin_monitor_proto_enumTypes[2].Descriptor()
}

func (ProblemSeverity) Type() protoreflect.EnumType {
	return &file_proto_plugin_monitor_proto_enumTypes[2]
}

func (x ProblemSeverity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProblemSeverity.Descriptor instead.
func (ProblemSeverity) EnumDescriptor() ([]byte, []int) {
	return file_proto_plugin_monitor_proto_rawDescGZIP(), []int{2}
}

type HealthCheckResponse_ServingStatus int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_ServingStatus = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_ServingStatus = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_ServingStatus = 2
)

// Enum value maps for HealthCheckResponse_ServingStatus.
var (
	HealthCheckResponse_ServingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
	}
	HealthCheckResponse_ServingStatus_value = map[string]int32{
		"UNKNOWN":     0,
		"SERVING":     1,
		"NOT_SERVING": 2,
	}
)

func (x HealthCheckResponse_ServingStatus) Enum() *HealthCheckResponse_ServingStatus {
	p := new(HealthCheckResponse_ServingStatus)
	*p = x
	return p
}

func (x HealthCheckResponse_ServingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_ServingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_plugin_monitor_proto_enumTypes[3].Descriptor()
}

func (HealthCheckResponse_ServingStatus) Type() protoreflect.EnumType {
	return &file_proto_plugin_monitor_proto_enumTypes[3]
}

func (x HealthCheckResponse_ServingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_ServingStatus.Descriptor instead.
func (HealthCheckResponse_ServingStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_plugin_monitor_proto_rawDescGZIP(), []int{4, 0}
}

// ProblemReport represents a single problem detected by the client
type ProblemReport struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type of problem (permanent affects node condition, temporary generates event)
	Type ProblemType `protobuf:"varint,1,opt,name=type,proto3,enum=grpcpluginmonitor.ProblemType" json:"type,omitempty"`
	// Condition name for permanent problems (e.g., "NetworkProblem", "DiskPressure")
	Condition string `protobuf:"bytes,2,opt,name=condition,proto3" json:"condition,omitempty"`
	// Short reason identifier (e.g., "NetworkDown", "DiskFull")
	Reason string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	// Human-readable message describing the problem
	Message string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	// Status of the problem
	Status ProblemStatus `protobuf:"varint,5,opt,name=status,proto3,enum=grpcpluginmonitor.ProblemStatus" json:"status,omitempty"`
	// Severity level for events
	Severity ProblemSeverity `protobuf:"varint,6,opt,name=severity,proto3,enum=grpcpluginmonitor.ProblemSeverity" json:"severity,omitempty"`
	// Timestamp when the problem was detected
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Additional metadata about the problem
	Metadata      map[string]string `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProblemReport) Reset() {
	*x = ProblemReport{}
	mi := &file_proto_plugin_monitor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProblemReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProblemReport) ProtoMessage() {}

func (x *ProblemReport) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plugin_monitor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProblemReport.ProtoReflect.Descriptor instead.
func (*ProblemReport) Descriptor() ([]byte, []int) {
	return file_proto_plugin_monitor_proto_rawDescGZIP(), []int{0}
}

func (x *ProblemReport) GetType() ProblemType {
	if x != nil {
		return x.Type
	}
	return ProblemType_PERMANENT
}

func (x *ProblemReport) GetCondition() string {
	if x != nil {
		return x.Condition
	}
	return ""
}

func (x *ProblemReport) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ProblemReport) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ProblemReport) GetStatus() ProblemStatus {
	if x != nil {
		return x.Status
	}
	return ProblemStatus_OK
}

func (x *ProblemReport) GetSeverity() ProblemSeverity {
	if x != nil {
		return x.Severity
	}
	return ProblemSeverity_INFO
}

func (x *ProblemReport) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ProblemReport) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// ReportProblemsRequest contains one or more problem reports
type ReportProblemsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Source identifier for the reporting client
	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// List of problems to report
	Problems []*ProblemReport `protobuf:"bytes,2,rep,name=problems,proto3" json:"problems,omitempty"`
	// Client version for compatibility tracking
	ClientVersion string `protobuf:"bytes,3,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportProblemsRequest) Reset() {
	*x = ReportProblemsRequest{}
	mi := &file_proto_plugin_monitor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportProblemsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportProblemsRequest) ProtoMessage() {}

func (x *ReportProblemsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plugin_monitor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportProblemsRequest.ProtoReflect.Descriptor instead.
func (*ReportProblemsRequest) Descriptor() ([]byte, []int) {
	return file_proto_plugin_monitor_proto_rawDescGZIP(), []int{1}
}

func (x *ReportProblemsRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ReportProblemsRequest) GetProblems() []*ProblemReport {
	if x != nil {
		return x.Problems
	}
	return nil
}

func (x *ReportProblemsRequest) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

// ReportProblemsResponse contains the server's response
type ReportProblemsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Whether the request was processed successfully
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Error message if success is false
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Number of problems processed
	ProcessedCount int32 `protobuf:"varint,3,opt,name=processed_count,json=processedCount,proto3" json:"processed_count,omitempty"`
	// Server processing timestamp
	ProcessedAt   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=processed_at,json=processedAt,proto3" json:"processed_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportProblemsResponse) Reset() {
	*x = ReportProblemsResponse{}
	mi := &file_proto_plugin_monitor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportProblemsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportProblemsResponse) ProtoMessage() {}

func (x *ReportProblemsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plugin_monitor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportProblemsResponse.ProtoReflect.Descriptor instead.
func (*ReportProblemsResponse) Descriptor() ([]byte, []int) {
	return file_proto_plugin_monitor_proto_rawDescGZIP(), []int{2}
}

func (x *ReportProblemsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReportProblemsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ReportProblemsResponse) GetProcessedCount() int32 {
	if x != nil {
		return x.ProcessedCount
	}
	return 0
}

func (x *ReportProblemsResponse) GetProcessedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ProcessedAt
	}
	return nil
}

// HealthCheckRequest for monitoring server health
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_proto_plugin_monitor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plugin_monitor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_proto_plugin_monitor_proto_rawDescGZIP(), []int{3}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

// HealthCheckResponse with server health status
type HealthCheckResponse struct {
	state         protoimpl.MessageState            `protogen:"open.v1"`
	Status        HealthCheckResponse_ServingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=grpcpluginmonitor.HealthCheckResponse_ServingStatus" json:"status,omitempty"`
	Message       string                            `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_proto_plugin_monitor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_plugin_monitor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_proto_plugin_monitor_proto_rawDescGZIP(), []int{4}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_ServingStatus {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_plugin_monitor_proto protoreflect.FileDescriptor

const file_proto_plugin_monitor_proto_rawDesc = "" +
	"\n" +
	"\x1aproto/plugin_monitor.proto\x12\x11grpcpluginmonitor\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd0\x03\n" +
	"\rProblemReport\x122\n" +
	"\x04type\x18\x01 \x01(\x0e2\x1e.grpcpluginmonitor.ProblemTypeR\x04type\x12\x1c\n" +
	"\tcondition\x18\x02 \x01(\tR\tcondition\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x128\n" +
	"\x06status\x18\x05 \x01(\x0e2 .grpcpluginmonitor.ProblemStatusR\x06status\x12>\n" +
	"\bseverity\x18\x06 \x01(\x0e2\".grpcpluginmonitor.ProblemSeverityR\bseverity\x128\n" +
	"\ttimestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12J\n" +
	"\bmetadata\x18\b \x03(\v2..grpcpluginmonitor.ProblemReport.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x94\x01\n" +
	"\x15ReportProblemsRequest\x12\x16\n" +
	"\x06source\x18\x01 \x01(\tR\x06source\x12<\n" +
	"\bproblems\x18\x02 \x03(\v2 .grpcpluginmonitor.ProblemReportR\bproblems\x12%\n" +
	"\x0eclient_version\x18\x03 \x01(\tR\rclientVersion\"\xbf\x01\n" +
	"\x16ReportProblemsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12'\n" +
	"\x0fprocessed_count\x18\x03 \x01(\x05R\x0eprocessedCount\x12=\n" +
	"\fprocessed_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\vprocessedAt\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"\xb9\x01\n" +
	"\x13HealthCheckResponse\x12L\n" +
	"\x06status\x18\x01 \x01(\x0e24.grpcpluginmonitor.HealthCheckResponse.ServingStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\":\n" +
	"\rServingStatus\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSERVING\x10\x01\x12\x0f\n" +
	"\vNOT_SERVING\x10\x02*+\n" +
	"\vProblemType\x12\r\n" +
	"\tPERMANENT\x10\x00\x12\r\n" +
	"\tTEMPORARY\x10\x01*1\n" +
	"\rProblemStatus\x12\x06\n" +
	"\x02OK\x10\x00\x12\v\n" +
	"\aWARNING\x10\x01\x12\v\n" +
	"\aUNKNOWN\x10\x02*0\n" +
	"\x0fProblemSeverity\x12\b\n" +
	"\x04INFO\x10\x00\x12\b\n" +
	"\x04WARN\x10\x01\x12\t\n" +
	"\x05ERROR\x10\x022\xd6\x01\n" +
	"\x15ProblemMonitorService\x12e\n" +
	"\x0eReportProblems\x12(.grpcpluginmonitor.ReportProblemsRequest\x1a).grpcpluginmonitor.ReportProblemsResponse\x12V\n" +
	"\x05Check\x12%.grpcpluginmonitor.HealthCheckRequest\x1a&.grpcpluginmonitor.HealthCheckResponseB:Z8k8s.io/node-problem-detector/pkg/grpcpluginmonitor/protob\x06proto3"

var (
	file_proto_plugin_monitor_proto_rawDescOnce sync.Once
	file_proto_plugin_monitor_proto_rawDescData []byte
)

func file_proto_plugin_monitor_proto_rawDescGZIP() []byte {
	file_proto_plugin_monitor_proto_rawDescOnce.Do(func() {
		file_proto_plugin_monitor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_plugin_monitor_proto_rawDesc), len(file_proto_plugin_monitor_proto_rawDesc)))
	})
	return file_proto_plugin_monitor_proto_rawDescData
}

var file_proto_plugin_monitor_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_plugin_monitor_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_plugin_monitor_proto_goTypes = []any{
	(ProblemType)(0),                       // 0: grpcpluginmonitor.ProblemType
	(ProblemStatus)(0),                     // 1: grpcpluginmonitor.ProblemStatus
	(ProblemSeverity)(0),                   // 2: grpcpluginmonitor.ProblemSeverity
	(HealthCheckResponse_ServingStatus)(0), // 3: grpcpluginmonitor.HealthCheckResponse.ServingStatus
	(*ProblemReport)(nil),                  // 4: grpcpluginmonitor.ProblemReport
	(*ReportProblemsRequest)(nil),          // 5: grpcpluginmonitor.ReportProblemsRequest
	(*ReportProblemsResponse)(nil),         // 6: grpcpluginmonitor.ReportProblemsResponse
	(*HealthCheckRequest)(nil),             // 7: grpcpluginmonitor.HealthCheckRequest
	(*HealthCheckResponse)(nil),            // 8: grpcpluginmonitor.HealthCheckResponse
	nil,                                    // 9: grpcpluginmonitor.ProblemReport.MetadataEntry
	(*timestamppb.Timestamp)(nil),          // 10: google.protobuf.Timestamp
}
var file_proto_plugin_monitor_proto_depIdxs = []int32{
	0,  // 0: grpcpluginmonitor.ProblemReport.type:type_name -> grpcpluginmonitor.ProblemType
	1,  // 1: grpcpluginmonitor.ProblemReport.status:type_name -> grpcpluginmonitor.ProblemStatus
	2,  // 2: grpcpluginmonitor.ProblemReport.severity:type_name -> grpcpluginmonitor.ProblemSeverity
	10, // 3: grpcpluginmonitor.ProblemReport.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 4: grpcpluginmonitor.ProblemReport.metadata:type_name -> grpcpluginmonitor.ProblemReport.MetadataEntry
	4,  // 5: grpcpluginmonitor.ReportProblemsRequest.problems:type_name -> grpcpluginmonitor.ProblemReport
	10, // 6: grpcpluginmonitor.ReportProblemsResponse.processed_at:type_name -> google.protobuf.Timestamp
	3,  // 7: grpcpluginmonitor.HealthCheckResponse.status:type_name -> grpcpluginmonitor.HealthCheckResponse.ServingStatus
	5,  // 8: grpcpluginmonitor.ProblemMonitorService.ReportProblems:input_type -> grpcpluginmonitor.ReportProblemsRequest
	7,  // 9: grpcpluginmonitor.ProblemMonitorService.Check:input_type -> grpcpluginmonitor.HealthCheckRequest
	6,  // 10: grpcpluginmonitor.ProblemMonitorService.ReportProblems:output_type -> grpcpluginmonitor.ReportProblemsResponse
	8,  // 11: grpcpluginmonitor.ProblemMonitorService.Check:output_type -> grpcpluginmonitor.HealthCheckResponse
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_plugin_monitor_proto_init() }
func file_proto_plugin_monitor_proto_init() {
	if File_proto_plugin_monitor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_plugin_monitor_proto_rawDesc), len(file_proto_plugin_monitor_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_plugin_monitor_proto_goTypes,
		DependencyIndexes: file_proto_plugin_monitor_proto_depIdxs,
		EnumInfos:         file_proto_plugin_monitor_proto_enumTypes,
		MessageInfos:      file_proto_plugin_monitor_proto_msgTypes,
	}.Build()
	File_proto_plugin_monitor_proto = out.File
	file_proto_plugin_monitor_proto_goTypes = nil
	file_proto_plugin_monitor_proto_depIdxs = nil
}
